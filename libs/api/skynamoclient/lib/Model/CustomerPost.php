<?php
/**
 * CustomerPost
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  SkynamoClientAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Skynamo Public API
 *
 * The specification for Skynamo's public API <br><br>Helpful links<br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671335262749-Creating-a-Public-API-Key\" id=\"hint_box\">Creating a Public API Key</a><br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671463933597-Postman-Examples\" id=\"hint_box\">Postman examples</a><br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671240071453-How-to-upload-customer-images-using-Postman\" id=\"hint_box\">How to upload customer images</a>
 *
 * The version of the OpenAPI document: 1.0.18
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SkynamoClientAPI\Model;

use \ArrayAccess;
use \SkynamoClientAPI\ObjectSerializer;

/**
 * CustomerPost Class Doc Comment
 *
 * @category Class
 * @description This is a customer in Skynamo, used for adding a customer (All values not specified will assume their default values)
 * @package  SkynamoClientAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class CustomerPost implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CustomerPost';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'code' => 'string',
        'name' => 'string',
        'active' => 'bool',
        'location' => '\SkynamoClientAPI\Model\Location',
        'default_discount' => 'float',
        'price_list_id' => 'int',
        'price_list_name' => 'string',
        'assigned_users' => 'int[]',
        'default_warehouse_id' => 'int',
        'custom_fields' => '\SkynamoClientAPI\Model\CustomField[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'code' => null,
        'name' => null,
        'active' => null,
        'location' => null,
        'default_discount' => 'float',
        'price_list_id' => null,
        'price_list_name' => null,
        'assigned_users' => null,
        'default_warehouse_id' => null,
        'custom_fields' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'name' => 'name',
        'active' => 'active',
        'location' => 'location',
        'default_discount' => 'default_discount',
        'price_list_id' => 'price_list_id',
        'price_list_name' => 'price_list_name',
        'assigned_users' => 'assigned_users',
        'default_warehouse_id' => 'default_warehouse_id',
        'custom_fields' => 'custom_fields'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'name' => 'setName',
        'active' => 'setActive',
        'location' => 'setLocation',
        'default_discount' => 'setDefaultDiscount',
        'price_list_id' => 'setPriceListId',
        'price_list_name' => 'setPriceListName',
        'assigned_users' => 'setAssignedUsers',
        'default_warehouse_id' => 'setDefaultWarehouseId',
        'custom_fields' => 'setCustomFields'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'name' => 'getName',
        'active' => 'getActive',
        'location' => 'getLocation',
        'default_discount' => 'getDefaultDiscount',
        'price_list_id' => 'getPriceListId',
        'price_list_name' => 'getPriceListName',
        'assigned_users' => 'getAssignedUsers',
        'default_warehouse_id' => 'getDefaultWarehouseId',
        'custom_fields' => 'getCustomFields'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = $data['code'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['active'] = $data['active'] ?? true;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['default_discount'] = $data['default_discount'] ?? 0.0;
        $this->container['price_list_id'] = $data['price_list_id'] ?? null;
        $this->container['price_list_name'] = $data['price_list_name'] ?? null;
        $this->container['assigned_users'] = $data['assigned_users'] ?? null;
        $this->container['default_warehouse_id'] = $data['default_warehouse_id'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code The unique code associated with this customer (automatically generated if not supplied)
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name The name of the customer
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active Whether or not the customer is active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \SkynamoClientAPI\Model\Location|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \SkynamoClientAPI\Model\Location|null $location location
     *
     * @return self
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets default_discount
     *
     * @return float|null
     */
    public function getDefaultDiscount()
    {
        return $this->container['default_discount'];
    }

    /**
     * Sets default_discount
     *
     * @param float|null $default_discount The default discount applied for this customer when creating orders
     *
     * @return self
     */
    public function setDefaultDiscount($default_discount)
    {
        $this->container['default_discount'] = $default_discount;

        return $this;
    }

    /**
     * Gets price_list_id
     *
     * @return int|null
     */
    public function getPriceListId()
    {
        return $this->container['price_list_id'];
    }

    /**
     * Sets price_list_id
     *
     * @param int|null $price_list_id The unique identifier of the price list associated with this customer (Alternative to priceListName)
     *
     * @return self
     */
    public function setPriceListId($price_list_id)
    {
        $this->container['price_list_id'] = $price_list_id;

        return $this;
    }

    /**
     * Gets price_list_name
     *
     * @return string|null
     */
    public function getPriceListName()
    {
        return $this->container['price_list_name'];
    }

    /**
     * Sets price_list_name
     *
     * @param string|null $price_list_name The name of the price list associated with this customer (Alternative to priceListID - ignored if priceListID is specified)
     *
     * @return self
     */
    public function setPriceListName($price_list_name)
    {
        $this->container['price_list_name'] = $price_list_name;

        return $this;
    }

    /**
     * Gets assigned_users
     *
     * @return int[]|null
     */
    public function getAssignedUsers()
    {
        return $this->container['assigned_users'];
    }

    /**
     * Sets assigned_users
     *
     * @param int[]|null $assigned_users List of user ids that are assigned to this customer
     *
     * @return self
     */
    public function setAssignedUsers($assigned_users)
    {
        $this->container['assigned_users'] = $assigned_users;

        return $this;
    }

    /**
     * Gets default_warehouse_id
     *
     * @return int|null
     */
    public function getDefaultWarehouseId()
    {
        return $this->container['default_warehouse_id'];
    }

    /**
     * Sets default_warehouse_id
     *
     * @param int|null $default_warehouse_id The unique identifier of the warehouse associated with this customer
     *
     * @return self
     */
    public function setDefaultWarehouseId($default_warehouse_id)
    {
        $this->container['default_warehouse_id'] = $default_warehouse_id;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \SkynamoClientAPI\Model\CustomField[]|null
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \SkynamoClientAPI\Model\CustomField[]|null $custom_fields Certain custom fields may be required depending on the custom fields that have been set up
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


