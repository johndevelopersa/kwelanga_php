<?php
/**
 * Configuration
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  SkynamoClientAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Skynamo Public API
 *
 * The specification for Skynamo's public API <br><br>Helpful links<br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671335262749-Creating-a-Public-API-Key\" id=\"hint_box\">Creating a Public API Key</a><br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671463933597-Postman-Examples\" id=\"hint_box\">Postman examples</a><br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671240071453-How-to-upload-customer-images-using-Postman\" id=\"hint_box\">How to upload customer images</a>
 *
 * The version of the OpenAPI document: 1.0.18
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace SkynamoClientAPI\Model;

use \ArrayAccess;
use \SkynamoClientAPI\ObjectSerializer;

/**
 * Configuration Class Doc Comment
 *
 * @category Class
 * @description This is a configuration in Skynamo, used for fetching information about set configurations values
 * @package  SkynamoClientAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Configuration implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Configuration';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'company_name' => 'string',
        'company_logo' => 'string',
        'company_logo_setting' => 'string',
        'hide_links_in_emails' => 'bool',
        'credit_request_recipients' => 'string',
        'order_email_recipients' => 'string',
        'quote_recipients' => 'string',
        'show_order_item_discount_in_emails' => 'bool',
        'show_product_thumbnail_in_emails' => 'bool',
        'new_customer_email_recipients' => 'string',
        'form_completed_email_recipients' => 'string',
        'import_email_recipients' => 'string',
        'polling_schedule' => 'string',
        'export_customers_on_imports' => 'bool',
        'export_products_on_imports' => 'bool',
        'export_credit_requests_on_imports' => 'bool',
        'export_orders_on_imports' => 'bool',
        'export_quotes_on_imports' => 'bool',
        'reporting_status' => 'bool',
        'default_price_list_id' => 'int',
        'default_price_list_name' => 'string',
        'minimum_price_list_id' => 'int',
        'minimum_price_list_name' => 'string',
        'warning_price_list_id' => 'int',
        'warning_price_list_name' => 'string',
        'deals_enabled' => 'bool',
        'overall_discount_enabled' => 'bool',
        'warehouse_required' => 'bool',
        'credit_request_signature_required' => 'bool',
        'order_signature_required' => 'bool',
        'quote_signature_required' => 'bool',
        'allow_offsite_visits' => 'bool',
        'currency' => '\SkynamoClientAPI\Model\Currency',
        'time_zone' => '\SkynamoClientAPI\Model\TimeZone',
        'distance_unit' => '\SkynamoClientAPI\Model\DistanceUnit',
        'default_tax_rate_id' => 'int',
        'default_tax_rate_name' => 'int',
        'mobile_excessive_data_usage_threshold' => 'double',
        'maximum_mobile_photo_size' => 'float',
        'form_photo_wait_time' => '\DateTime',
        'session_duration' => '\DateTime',
        'minimum_password_length' => 'int',
        'minimum_password_non_apha_length' => 'int',
        'max_invalid_password_attempts' => 'int',
        'days_until_password_expiry' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'company_name' => null,
        'company_logo' => null,
        'company_logo_setting' => null,
        'hide_links_in_emails' => null,
        'credit_request_recipients' => null,
        'order_email_recipients' => null,
        'quote_recipients' => null,
        'show_order_item_discount_in_emails' => null,
        'show_product_thumbnail_in_emails' => null,
        'new_customer_email_recipients' => null,
        'form_completed_email_recipients' => null,
        'import_email_recipients' => null,
        'polling_schedule' => null,
        'export_customers_on_imports' => null,
        'export_products_on_imports' => null,
        'export_credit_requests_on_imports' => null,
        'export_orders_on_imports' => null,
        'export_quotes_on_imports' => null,
        'reporting_status' => null,
        'default_price_list_id' => null,
        'default_price_list_name' => null,
        'minimum_price_list_id' => null,
        'minimum_price_list_name' => null,
        'warning_price_list_id' => null,
        'warning_price_list_name' => null,
        'deals_enabled' => null,
        'overall_discount_enabled' => null,
        'warehouse_required' => null,
        'credit_request_signature_required' => null,
        'order_signature_required' => null,
        'quote_signature_required' => null,
        'allow_offsite_visits' => null,
        'currency' => null,
        'time_zone' => null,
        'distance_unit' => null,
        'default_tax_rate_id' => null,
        'default_tax_rate_name' => null,
        'mobile_excessive_data_usage_threshold' => 'double',
        'maximum_mobile_photo_size' => 'float',
        'form_photo_wait_time' => 'date-time',
        'session_duration' => 'date-time',
        'minimum_password_length' => null,
        'minimum_password_non_apha_length' => null,
        'max_invalid_password_attempts' => null,
        'days_until_password_expiry' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_name' => 'company_name',
        'company_logo' => 'company_logo',
        'company_logo_setting' => 'company_logo_setting',
        'hide_links_in_emails' => 'hide_links_in_emails',
        'credit_request_recipients' => 'credit_request_recipients',
        'order_email_recipients' => 'order_email_recipients',
        'quote_recipients' => 'quote_recipients',
        'show_order_item_discount_in_emails' => 'show_order_item_discount_in_emails',
        'show_product_thumbnail_in_emails' => 'show_product_thumbnail_in_emails',
        'new_customer_email_recipients' => 'new_customer_email_recipients',
        'form_completed_email_recipients' => 'form_completed_email_recipients',
        'import_email_recipients' => 'import_email_recipients',
        'polling_schedule' => 'polling_schedule',
        'export_customers_on_imports' => 'export_customers_on_imports',
        'export_products_on_imports' => 'export_products_on_imports',
        'export_credit_requests_on_imports' => 'export_credit_requests_on_imports',
        'export_orders_on_imports' => 'export_orders_on_imports',
        'export_quotes_on_imports' => 'export_quotes_on_imports',
        'reporting_status' => 'reporting_status',
        'default_price_list_id' => 'default_price_list_id',
        'default_price_list_name' => 'default_price_list_name',
        'minimum_price_list_id' => 'minimum_price_list_id',
        'minimum_price_list_name' => 'minimum_price_list_name',
        'warning_price_list_id' => 'warning_price_list_id',
        'warning_price_list_name' => 'warning_price_list_name',
        'deals_enabled' => 'deals_enabled',
        'overall_discount_enabled' => 'overall_discount_enabled',
        'warehouse_required' => 'warehouse_required',
        'credit_request_signature_required' => 'credit_request_signature_required',
        'order_signature_required' => 'order_signature_required',
        'quote_signature_required' => 'quote_signature_required',
        'allow_offsite_visits' => 'allow_offsite_visits',
        'currency' => 'currency',
        'time_zone' => 'time_zone',
        'distance_unit' => 'distance_unit',
        'default_tax_rate_id' => 'default_tax_rate_id',
        'default_tax_rate_name' => 'default_tax_rate_name',
        'mobile_excessive_data_usage_threshold' => 'mobile_excessive_data_usage_threshold',
        'maximum_mobile_photo_size' => 'maximum_mobile_photo_size',
        'form_photo_wait_time' => 'form_photo_wait_time',
        'session_duration' => 'session_duration',
        'minimum_password_length' => 'minimum_password_length',
        'minimum_password_non_apha_length' => 'minimum_password_non_apha_length',
        'max_invalid_password_attempts' => 'max_invalid_password_attempts',
        'days_until_password_expiry' => 'days_until_password_expiry'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_name' => 'setCompanyName',
        'company_logo' => 'setCompanyLogo',
        'company_logo_setting' => 'setCompanyLogoSetting',
        'hide_links_in_emails' => 'setHideLinksInEmails',
        'credit_request_recipients' => 'setCreditRequestRecipients',
        'order_email_recipients' => 'setOrderEmailRecipients',
        'quote_recipients' => 'setQuoteRecipients',
        'show_order_item_discount_in_emails' => 'setShowOrderItemDiscountInEmails',
        'show_product_thumbnail_in_emails' => 'setShowProductThumbnailInEmails',
        'new_customer_email_recipients' => 'setNewCustomerEmailRecipients',
        'form_completed_email_recipients' => 'setFormCompletedEmailRecipients',
        'import_email_recipients' => 'setImportEmailRecipients',
        'polling_schedule' => 'setPollingSchedule',
        'export_customers_on_imports' => 'setExportCustomersOnImports',
        'export_products_on_imports' => 'setExportProductsOnImports',
        'export_credit_requests_on_imports' => 'setExportCreditRequestsOnImports',
        'export_orders_on_imports' => 'setExportOrdersOnImports',
        'export_quotes_on_imports' => 'setExportQuotesOnImports',
        'reporting_status' => 'setReportingStatus',
        'default_price_list_id' => 'setDefaultPriceListId',
        'default_price_list_name' => 'setDefaultPriceListName',
        'minimum_price_list_id' => 'setMinimumPriceListId',
        'minimum_price_list_name' => 'setMinimumPriceListName',
        'warning_price_list_id' => 'setWarningPriceListId',
        'warning_price_list_name' => 'setWarningPriceListName',
        'deals_enabled' => 'setDealsEnabled',
        'overall_discount_enabled' => 'setOverallDiscountEnabled',
        'warehouse_required' => 'setWarehouseRequired',
        'credit_request_signature_required' => 'setCreditRequestSignatureRequired',
        'order_signature_required' => 'setOrderSignatureRequired',
        'quote_signature_required' => 'setQuoteSignatureRequired',
        'allow_offsite_visits' => 'setAllowOffsiteVisits',
        'currency' => 'setCurrency',
        'time_zone' => 'setTimeZone',
        'distance_unit' => 'setDistanceUnit',
        'default_tax_rate_id' => 'setDefaultTaxRateId',
        'default_tax_rate_name' => 'setDefaultTaxRateName',
        'mobile_excessive_data_usage_threshold' => 'setMobileExcessiveDataUsageThreshold',
        'maximum_mobile_photo_size' => 'setMaximumMobilePhotoSize',
        'form_photo_wait_time' => 'setFormPhotoWaitTime',
        'session_duration' => 'setSessionDuration',
        'minimum_password_length' => 'setMinimumPasswordLength',
        'minimum_password_non_apha_length' => 'setMinimumPasswordNonAphaLength',
        'max_invalid_password_attempts' => 'setMaxInvalidPasswordAttempts',
        'days_until_password_expiry' => 'setDaysUntilPasswordExpiry'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_name' => 'getCompanyName',
        'company_logo' => 'getCompanyLogo',
        'company_logo_setting' => 'getCompanyLogoSetting',
        'hide_links_in_emails' => 'getHideLinksInEmails',
        'credit_request_recipients' => 'getCreditRequestRecipients',
        'order_email_recipients' => 'getOrderEmailRecipients',
        'quote_recipients' => 'getQuoteRecipients',
        'show_order_item_discount_in_emails' => 'getShowOrderItemDiscountInEmails',
        'show_product_thumbnail_in_emails' => 'getShowProductThumbnailInEmails',
        'new_customer_email_recipients' => 'getNewCustomerEmailRecipients',
        'form_completed_email_recipients' => 'getFormCompletedEmailRecipients',
        'import_email_recipients' => 'getImportEmailRecipients',
        'polling_schedule' => 'getPollingSchedule',
        'export_customers_on_imports' => 'getExportCustomersOnImports',
        'export_products_on_imports' => 'getExportProductsOnImports',
        'export_credit_requests_on_imports' => 'getExportCreditRequestsOnImports',
        'export_orders_on_imports' => 'getExportOrdersOnImports',
        'export_quotes_on_imports' => 'getExportQuotesOnImports',
        'reporting_status' => 'getReportingStatus',
        'default_price_list_id' => 'getDefaultPriceListId',
        'default_price_list_name' => 'getDefaultPriceListName',
        'minimum_price_list_id' => 'getMinimumPriceListId',
        'minimum_price_list_name' => 'getMinimumPriceListName',
        'warning_price_list_id' => 'getWarningPriceListId',
        'warning_price_list_name' => 'getWarningPriceListName',
        'deals_enabled' => 'getDealsEnabled',
        'overall_discount_enabled' => 'getOverallDiscountEnabled',
        'warehouse_required' => 'getWarehouseRequired',
        'credit_request_signature_required' => 'getCreditRequestSignatureRequired',
        'order_signature_required' => 'getOrderSignatureRequired',
        'quote_signature_required' => 'getQuoteSignatureRequired',
        'allow_offsite_visits' => 'getAllowOffsiteVisits',
        'currency' => 'getCurrency',
        'time_zone' => 'getTimeZone',
        'distance_unit' => 'getDistanceUnit',
        'default_tax_rate_id' => 'getDefaultTaxRateId',
        'default_tax_rate_name' => 'getDefaultTaxRateName',
        'mobile_excessive_data_usage_threshold' => 'getMobileExcessiveDataUsageThreshold',
        'maximum_mobile_photo_size' => 'getMaximumMobilePhotoSize',
        'form_photo_wait_time' => 'getFormPhotoWaitTime',
        'session_duration' => 'getSessionDuration',
        'minimum_password_length' => 'getMinimumPasswordLength',
        'minimum_password_non_apha_length' => 'getMinimumPasswordNonAphaLength',
        'max_invalid_password_attempts' => 'getMaxInvalidPasswordAttempts',
        'days_until_password_expiry' => 'getDaysUntilPasswordExpiry'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_name'] = $data['company_name'] ?? null;
        $this->container['company_logo'] = $data['company_logo'] ?? null;
        $this->container['company_logo_setting'] = $data['company_logo_setting'] ?? null;
        $this->container['hide_links_in_emails'] = $data['hide_links_in_emails'] ?? null;
        $this->container['credit_request_recipients'] = $data['credit_request_recipients'] ?? null;
        $this->container['order_email_recipients'] = $data['order_email_recipients'] ?? null;
        $this->container['quote_recipients'] = $data['quote_recipients'] ?? null;
        $this->container['show_order_item_discount_in_emails'] = $data['show_order_item_discount_in_emails'] ?? null;
        $this->container['show_product_thumbnail_in_emails'] = $data['show_product_thumbnail_in_emails'] ?? null;
        $this->container['new_customer_email_recipients'] = $data['new_customer_email_recipients'] ?? null;
        $this->container['form_completed_email_recipients'] = $data['form_completed_email_recipients'] ?? null;
        $this->container['import_email_recipients'] = $data['import_email_recipients'] ?? null;
        $this->container['polling_schedule'] = $data['polling_schedule'] ?? null;
        $this->container['export_customers_on_imports'] = $data['export_customers_on_imports'] ?? null;
        $this->container['export_products_on_imports'] = $data['export_products_on_imports'] ?? null;
        $this->container['export_credit_requests_on_imports'] = $data['export_credit_requests_on_imports'] ?? null;
        $this->container['export_orders_on_imports'] = $data['export_orders_on_imports'] ?? null;
        $this->container['export_quotes_on_imports'] = $data['export_quotes_on_imports'] ?? null;
        $this->container['reporting_status'] = $data['reporting_status'] ?? null;
        $this->container['default_price_list_id'] = $data['default_price_list_id'] ?? null;
        $this->container['default_price_list_name'] = $data['default_price_list_name'] ?? null;
        $this->container['minimum_price_list_id'] = $data['minimum_price_list_id'] ?? null;
        $this->container['minimum_price_list_name'] = $data['minimum_price_list_name'] ?? null;
        $this->container['warning_price_list_id'] = $data['warning_price_list_id'] ?? null;
        $this->container['warning_price_list_name'] = $data['warning_price_list_name'] ?? null;
        $this->container['deals_enabled'] = $data['deals_enabled'] ?? null;
        $this->container['overall_discount_enabled'] = $data['overall_discount_enabled'] ?? null;
        $this->container['warehouse_required'] = $data['warehouse_required'] ?? null;
        $this->container['credit_request_signature_required'] = $data['credit_request_signature_required'] ?? null;
        $this->container['order_signature_required'] = $data['order_signature_required'] ?? null;
        $this->container['quote_signature_required'] = $data['quote_signature_required'] ?? null;
        $this->container['allow_offsite_visits'] = $data['allow_offsite_visits'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['time_zone'] = $data['time_zone'] ?? null;
        $this->container['distance_unit'] = $data['distance_unit'] ?? null;
        $this->container['default_tax_rate_id'] = $data['default_tax_rate_id'] ?? null;
        $this->container['default_tax_rate_name'] = $data['default_tax_rate_name'] ?? null;
        $this->container['mobile_excessive_data_usage_threshold'] = $data['mobile_excessive_data_usage_threshold'] ?? null;
        $this->container['maximum_mobile_photo_size'] = $data['maximum_mobile_photo_size'] ?? null;
        $this->container['form_photo_wait_time'] = $data['form_photo_wait_time'] ?? null;
        $this->container['session_duration'] = $data['session_duration'] ?? null;
        $this->container['minimum_password_length'] = $data['minimum_password_length'] ?? null;
        $this->container['minimum_password_non_apha_length'] = $data['minimum_password_non_apha_length'] ?? null;
        $this->container['max_invalid_password_attempts'] = $data['max_invalid_password_attempts'] ?? null;
        $this->container['days_until_password_expiry'] = $data['days_until_password_expiry'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_name
     *
     * @return string|null
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string|null $company_name The name of the company
     *
     * @return self
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_logo
     *
     * @return string|null
     */
    public function getCompanyLogo()
    {
        return $this->container['company_logo'];
    }

    /**
     * Sets company_logo
     *
     * @param string|null $company_logo The guid of the company image
     *
     * @return self
     */
    public function setCompanyLogo($company_logo)
    {
        $this->container['company_logo'] = $company_logo;

        return $this;
    }

    /**
     * Gets company_logo_setting
     *
     * @return string|null
     */
    public function getCompanyLogoSetting()
    {
        return $this->container['company_logo_setting'];
    }

    /**
     * Sets company_logo_setting
     *
     * @param string|null $company_logo_setting CompanyLogoSetting { get; set; }
     *
     * @return self
     */
    public function setCompanyLogoSetting($company_logo_setting)
    {
        $this->container['company_logo_setting'] = $company_logo_setting;

        return $this;
    }

    /**
     * Gets hide_links_in_emails
     *
     * @return bool|null
     */
    public function getHideLinksInEmails()
    {
        return $this->container['hide_links_in_emails'];
    }

    /**
     * Sets hide_links_in_emails
     *
     * @param bool|null $hide_links_in_emails Indicates whether links are hidden in emails
     *
     * @return self
     */
    public function setHideLinksInEmails($hide_links_in_emails)
    {
        $this->container['hide_links_in_emails'] = $hide_links_in_emails;

        return $this;
    }

    /**
     * Gets credit_request_recipients
     *
     * @return string|null
     */
    public function getCreditRequestRecipients()
    {
        return $this->container['credit_request_recipients'];
    }

    /**
     * Sets credit_request_recipients
     *
     * @param string|null $credit_request_recipients Emails recipients for credit requests
     *
     * @return self
     */
    public function setCreditRequestRecipients($credit_request_recipients)
    {
        $this->container['credit_request_recipients'] = $credit_request_recipients;

        return $this;
    }

    /**
     * Gets order_email_recipients
     *
     * @return string|null
     */
    public function getOrderEmailRecipients()
    {
        return $this->container['order_email_recipients'];
    }

    /**
     * Sets order_email_recipients
     *
     * @param string|null $order_email_recipients Emails recipients for orders
     *
     * @return self
     */
    public function setOrderEmailRecipients($order_email_recipients)
    {
        $this->container['order_email_recipients'] = $order_email_recipients;

        return $this;
    }

    /**
     * Gets quote_recipients
     *
     * @return string|null
     */
    public function getQuoteRecipients()
    {
        return $this->container['quote_recipients'];
    }

    /**
     * Sets quote_recipients
     *
     * @param string|null $quote_recipients Emails recipients for quotes
     *
     * @return self
     */
    public function setQuoteRecipients($quote_recipients)
    {
        $this->container['quote_recipients'] = $quote_recipients;

        return $this;
    }

    /**
     * Gets show_order_item_discount_in_emails
     *
     * @return bool|null
     */
    public function getShowOrderItemDiscountInEmails()
    {
        return $this->container['show_order_item_discount_in_emails'];
    }

    /**
     * Sets show_order_item_discount_in_emails
     *
     * @param bool|null $show_order_item_discount_in_emails Indicates whether the discount is displayed on the order email
     *
     * @return self
     */
    public function setShowOrderItemDiscountInEmails($show_order_item_discount_in_emails)
    {
        $this->container['show_order_item_discount_in_emails'] = $show_order_item_discount_in_emails;

        return $this;
    }

    /**
     * Gets show_product_thumbnail_in_emails
     *
     * @return bool|null
     */
    public function getShowProductThumbnailInEmails()
    {
        return $this->container['show_product_thumbnail_in_emails'];
    }

    /**
     * Sets show_product_thumbnail_in_emails
     *
     * @param bool|null $show_product_thumbnail_in_emails Indicates if images for products are included in the emails
     *
     * @return self
     */
    public function setShowProductThumbnailInEmails($show_product_thumbnail_in_emails)
    {
        $this->container['show_product_thumbnail_in_emails'] = $show_product_thumbnail_in_emails;

        return $this;
    }

    /**
     * Gets new_customer_email_recipients
     *
     * @return string|null
     */
    public function getNewCustomerEmailRecipients()
    {
        return $this->container['new_customer_email_recipients'];
    }

    /**
     * Sets new_customer_email_recipients
     *
     * @param string|null $new_customer_email_recipients Recipients for new customers that was added
     *
     * @return self
     */
    public function setNewCustomerEmailRecipients($new_customer_email_recipients)
    {
        $this->container['new_customer_email_recipients'] = $new_customer_email_recipients;

        return $this;
    }

    /**
     * Gets form_completed_email_recipients
     *
     * @return string|null
     */
    public function getFormCompletedEmailRecipients()
    {
        return $this->container['form_completed_email_recipients'];
    }

    /**
     * Sets form_completed_email_recipients
     *
     * @param string|null $form_completed_email_recipients Recipients for forms that were completed
     *
     * @return self
     */
    public function setFormCompletedEmailRecipients($form_completed_email_recipients)
    {
        $this->container['form_completed_email_recipients'] = $form_completed_email_recipients;

        return $this;
    }

    /**
     * Gets import_email_recipients
     *
     * @return string|null
     */
    public function getImportEmailRecipients()
    {
        return $this->container['import_email_recipients'];
    }

    /**
     * Sets import_email_recipients
     *
     * @param string|null $import_email_recipients Recipients for import results once completed
     *
     * @return self
     */
    public function setImportEmailRecipients($import_email_recipients)
    {
        $this->container['import_email_recipients'] = $import_email_recipients;

        return $this;
    }

    /**
     * Gets polling_schedule
     *
     * @return string|null
     */
    public function getPollingSchedule()
    {
        return $this->container['polling_schedule'];
    }

    /**
     * Sets polling_schedule
     *
     * @param string|null $polling_schedule The pooling scedule when integration is triggered
     *
     * @return self
     */
    public function setPollingSchedule($polling_schedule)
    {
        $this->container['polling_schedule'] = $polling_schedule;

        return $this;
    }

    /**
     * Gets export_customers_on_imports
     *
     * @return bool|null
     */
    public function getExportCustomersOnImports()
    {
        return $this->container['export_customers_on_imports'];
    }

    /**
     * Sets export_customers_on_imports
     *
     * @param bool|null $export_customers_on_imports Indicates whether a customer export will execute once integration is triggered
     *
     * @return self
     */
    public function setExportCustomersOnImports($export_customers_on_imports)
    {
        $this->container['export_customers_on_imports'] = $export_customers_on_imports;

        return $this;
    }

    /**
     * Gets export_products_on_imports
     *
     * @return bool|null
     */
    public function getExportProductsOnImports()
    {
        return $this->container['export_products_on_imports'];
    }

    /**
     * Sets export_products_on_imports
     *
     * @param bool|null $export_products_on_imports Indicates whether a product export will execute once integration is triggered
     *
     * @return self
     */
    public function setExportProductsOnImports($export_products_on_imports)
    {
        $this->container['export_products_on_imports'] = $export_products_on_imports;

        return $this;
    }

    /**
     * Gets export_credit_requests_on_imports
     *
     * @return bool|null
     */
    public function getExportCreditRequestsOnImports()
    {
        return $this->container['export_credit_requests_on_imports'];
    }

    /**
     * Sets export_credit_requests_on_imports
     *
     * @param bool|null $export_credit_requests_on_imports Indicates whether a credit request export will execute once integration is triggered
     *
     * @return self
     */
    public function setExportCreditRequestsOnImports($export_credit_requests_on_imports)
    {
        $this->container['export_credit_requests_on_imports'] = $export_credit_requests_on_imports;

        return $this;
    }

    /**
     * Gets export_orders_on_imports
     *
     * @return bool|null
     */
    public function getExportOrdersOnImports()
    {
        return $this->container['export_orders_on_imports'];
    }

    /**
     * Sets export_orders_on_imports
     *
     * @param bool|null $export_orders_on_imports Indicates whether a order export will execute once integration is triggered
     *
     * @return self
     */
    public function setExportOrdersOnImports($export_orders_on_imports)
    {
        $this->container['export_orders_on_imports'] = $export_orders_on_imports;

        return $this;
    }

    /**
     * Gets export_quotes_on_imports
     *
     * @return bool|null
     */
    public function getExportQuotesOnImports()
    {
        return $this->container['export_quotes_on_imports'];
    }

    /**
     * Sets export_quotes_on_imports
     *
     * @param bool|null $export_quotes_on_imports Indicates whether a quote export will execute once integration is triggered
     *
     * @return self
     */
    public function setExportQuotesOnImports($export_quotes_on_imports)
    {
        $this->container['export_quotes_on_imports'] = $export_quotes_on_imports;

        return $this;
    }

    /**
     * Gets reporting_status
     *
     * @return bool|null
     */
    public function getReportingStatus()
    {
        return $this->container['reporting_status'];
    }

    /**
     * Sets reporting_status
     *
     * @param bool|null $reporting_status The status of reporting
     *
     * @return self
     */
    public function setReportingStatus($reporting_status)
    {
        $this->container['reporting_status'] = $reporting_status;

        return $this;
    }

    /**
     * Gets default_price_list_id
     *
     * @return int|null
     */
    public function getDefaultPriceListId()
    {
        return $this->container['default_price_list_id'];
    }

    /**
     * Sets default_price_list_id
     *
     * @param int|null $default_price_list_id The id of the default price list
     *
     * @return self
     */
    public function setDefaultPriceListId($default_price_list_id)
    {
        $this->container['default_price_list_id'] = $default_price_list_id;

        return $this;
    }

    /**
     * Gets default_price_list_name
     *
     * @return string|null
     */
    public function getDefaultPriceListName()
    {
        return $this->container['default_price_list_name'];
    }

    /**
     * Sets default_price_list_name
     *
     * @param string|null $default_price_list_name The name of the default price list
     *
     * @return self
     */
    public function setDefaultPriceListName($default_price_list_name)
    {
        $this->container['default_price_list_name'] = $default_price_list_name;

        return $this;
    }

    /**
     * Gets minimum_price_list_id
     *
     * @return int|null
     */
    public function getMinimumPriceListId()
    {
        return $this->container['minimum_price_list_id'];
    }

    /**
     * Sets minimum_price_list_id
     *
     * @param int|null $minimum_price_list_id The id of the minimum price list
     *
     * @return self
     */
    public function setMinimumPriceListId($minimum_price_list_id)
    {
        $this->container['minimum_price_list_id'] = $minimum_price_list_id;

        return $this;
    }

    /**
     * Gets minimum_price_list_name
     *
     * @return string|null
     */
    public function getMinimumPriceListName()
    {
        return $this->container['minimum_price_list_name'];
    }

    /**
     * Sets minimum_price_list_name
     *
     * @param string|null $minimum_price_list_name The name of the minimum price list
     *
     * @return self
     */
    public function setMinimumPriceListName($minimum_price_list_name)
    {
        $this->container['minimum_price_list_name'] = $minimum_price_list_name;

        return $this;
    }

    /**
     * Gets warning_price_list_id
     *
     * @return int|null
     */
    public function getWarningPriceListId()
    {
        return $this->container['warning_price_list_id'];
    }

    /**
     * Sets warning_price_list_id
     *
     * @param int|null $warning_price_list_id The id of the warning price list
     *
     * @return self
     */
    public function setWarningPriceListId($warning_price_list_id)
    {
        $this->container['warning_price_list_id'] = $warning_price_list_id;

        return $this;
    }

    /**
     * Gets warning_price_list_name
     *
     * @return string|null
     */
    public function getWarningPriceListName()
    {
        return $this->container['warning_price_list_name'];
    }

    /**
     * Sets warning_price_list_name
     *
     * @param string|null $warning_price_list_name The name of the warning price list
     *
     * @return self
     */
    public function setWarningPriceListName($warning_price_list_name)
    {
        $this->container['warning_price_list_name'] = $warning_price_list_name;

        return $this;
    }

    /**
     * Gets deals_enabled
     *
     * @return bool|null
     */
    public function getDealsEnabled()
    {
        return $this->container['deals_enabled'];
    }

    /**
     * Sets deals_enabled
     *
     * @param bool|null $deals_enabled Indicates whether deals are enabled
     *
     * @return self
     */
    public function setDealsEnabled($deals_enabled)
    {
        $this->container['deals_enabled'] = $deals_enabled;

        return $this;
    }

    /**
     * Gets overall_discount_enabled
     *
     * @return bool|null
     */
    public function getOverallDiscountEnabled()
    {
        return $this->container['overall_discount_enabled'];
    }

    /**
     * Sets overall_discount_enabled
     *
     * @param bool|null $overall_discount_enabled Indicates whether overall discount is enabled
     *
     * @return self
     */
    public function setOverallDiscountEnabled($overall_discount_enabled)
    {
        $this->container['overall_discount_enabled'] = $overall_discount_enabled;

        return $this;
    }

    /**
     * Gets warehouse_required
     *
     * @return bool|null
     */
    public function getWarehouseRequired()
    {
        return $this->container['warehouse_required'];
    }

    /**
     * Sets warehouse_required
     *
     * @param bool|null $warehouse_required Indicates whether a warehouse is required
     *
     * @return self
     */
    public function setWarehouseRequired($warehouse_required)
    {
        $this->container['warehouse_required'] = $warehouse_required;

        return $this;
    }

    /**
     * Gets credit_request_signature_required
     *
     * @return bool|null
     */
    public function getCreditRequestSignatureRequired()
    {
        return $this->container['credit_request_signature_required'];
    }

    /**
     * Sets credit_request_signature_required
     *
     * @param bool|null $credit_request_signature_required Indicates if a signature is required on credit requests
     *
     * @return self
     */
    public function setCreditRequestSignatureRequired($credit_request_signature_required)
    {
        $this->container['credit_request_signature_required'] = $credit_request_signature_required;

        return $this;
    }

    /**
     * Gets order_signature_required
     *
     * @return bool|null
     */
    public function getOrderSignatureRequired()
    {
        return $this->container['order_signature_required'];
    }

    /**
     * Sets order_signature_required
     *
     * @param bool|null $order_signature_required Indicates if a signature is required on orders
     *
     * @return self
     */
    public function setOrderSignatureRequired($order_signature_required)
    {
        $this->container['order_signature_required'] = $order_signature_required;

        return $this;
    }

    /**
     * Gets quote_signature_required
     *
     * @return bool|null
     */
    public function getQuoteSignatureRequired()
    {
        return $this->container['quote_signature_required'];
    }

    /**
     * Sets quote_signature_required
     *
     * @param bool|null $quote_signature_required Indicates if a signature is required on credit requests
     *
     * @return self
     */
    public function setQuoteSignatureRequired($quote_signature_required)
    {
        $this->container['quote_signature_required'] = $quote_signature_required;

        return $this;
    }

    /**
     * Gets allow_offsite_visits
     *
     * @return bool|null
     */
    public function getAllowOffsiteVisits()
    {
        return $this->container['allow_offsite_visits'];
    }

    /**
     * Sets allow_offsite_visits
     *
     * @param bool|null $allow_offsite_visits Indicates if offisite visits are allowed
     *
     * @return self
     */
    public function setAllowOffsiteVisits($allow_offsite_visits)
    {
        $this->container['allow_offsite_visits'] = $allow_offsite_visits;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \SkynamoClientAPI\Model\Currency|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \SkynamoClientAPI\Model\Currency|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets time_zone
     *
     * @return \SkynamoClientAPI\Model\TimeZone|null
     */
    public function getTimeZone()
    {
        return $this->container['time_zone'];
    }

    /**
     * Sets time_zone
     *
     * @param \SkynamoClientAPI\Model\TimeZone|null $time_zone time_zone
     *
     * @return self
     */
    public function setTimeZone($time_zone)
    {
        $this->container['time_zone'] = $time_zone;

        return $this;
    }

    /**
     * Gets distance_unit
     *
     * @return \SkynamoClientAPI\Model\DistanceUnit|null
     */
    public function getDistanceUnit()
    {
        return $this->container['distance_unit'];
    }

    /**
     * Sets distance_unit
     *
     * @param \SkynamoClientAPI\Model\DistanceUnit|null $distance_unit distance_unit
     *
     * @return self
     */
    public function setDistanceUnit($distance_unit)
    {
        $this->container['distance_unit'] = $distance_unit;

        return $this;
    }

    /**
     * Gets default_tax_rate_id
     *
     * @return int|null
     */
    public function getDefaultTaxRateId()
    {
        return $this->container['default_tax_rate_id'];
    }

    /**
     * Sets default_tax_rate_id
     *
     * @param int|null $default_tax_rate_id The is of the default tax rate
     *
     * @return self
     */
    public function setDefaultTaxRateId($default_tax_rate_id)
    {
        $this->container['default_tax_rate_id'] = $default_tax_rate_id;

        return $this;
    }

    /**
     * Gets default_tax_rate_name
     *
     * @return int|null
     */
    public function getDefaultTaxRateName()
    {
        return $this->container['default_tax_rate_name'];
    }

    /**
     * Sets default_tax_rate_name
     *
     * @param int|null $default_tax_rate_name The name of the default tax rate
     *
     * @return self
     */
    public function setDefaultTaxRateName($default_tax_rate_name)
    {
        $this->container['default_tax_rate_name'] = $default_tax_rate_name;

        return $this;
    }

    /**
     * Gets mobile_excessive_data_usage_threshold
     *
     * @return double|null
     */
    public function getMobileExcessiveDataUsageThreshold()
    {
        return $this->container['mobile_excessive_data_usage_threshold'];
    }

    /**
     * Sets mobile_excessive_data_usage_threshold
     *
     * @param double|null $mobile_excessive_data_usage_threshold Mobile data threshold
     *
     * @return self
     */
    public function setMobileExcessiveDataUsageThreshold($mobile_excessive_data_usage_threshold)
    {
        $this->container['mobile_excessive_data_usage_threshold'] = $mobile_excessive_data_usage_threshold;

        return $this;
    }

    /**
     * Gets maximum_mobile_photo_size
     *
     * @return float|null
     */
    public function getMaximumMobilePhotoSize()
    {
        return $this->container['maximum_mobile_photo_size'];
    }

    /**
     * Sets maximum_mobile_photo_size
     *
     * @param float|null $maximum_mobile_photo_size Maximum photo size
     *
     * @return self
     */
    public function setMaximumMobilePhotoSize($maximum_mobile_photo_size)
    {
        $this->container['maximum_mobile_photo_size'] = $maximum_mobile_photo_size;

        return $this;
    }

    /**
     * Gets form_photo_wait_time
     *
     * @return \DateTime|null
     */
    public function getFormPhotoWaitTime()
    {
        return $this->container['form_photo_wait_time'];
    }

    /**
     * Sets form_photo_wait_time
     *
     * @param \DateTime|null $form_photo_wait_time The max wait time for images to upload before forms are completed
     *
     * @return self
     */
    public function setFormPhotoWaitTime($form_photo_wait_time)
    {
        $this->container['form_photo_wait_time'] = $form_photo_wait_time;

        return $this;
    }

    /**
     * Gets session_duration
     *
     * @return \DateTime|null
     */
    public function getSessionDuration()
    {
        return $this->container['session_duration'];
    }

    /**
     * Sets session_duration
     *
     * @param \DateTime|null $session_duration The duration of a users login session
     *
     * @return self
     */
    public function setSessionDuration($session_duration)
    {
        $this->container['session_duration'] = $session_duration;

        return $this;
    }

    /**
     * Gets minimum_password_length
     *
     * @return int|null
     */
    public function getMinimumPasswordLength()
    {
        return $this->container['minimum_password_length'];
    }

    /**
     * Sets minimum_password_length
     *
     * @param int|null $minimum_password_length The minimum length that a password can be
     *
     * @return self
     */
    public function setMinimumPasswordLength($minimum_password_length)
    {
        $this->container['minimum_password_length'] = $minimum_password_length;

        return $this;
    }

    /**
     * Gets minimum_password_non_apha_length
     *
     * @return int|null
     */
    public function getMinimumPasswordNonAphaLength()
    {
        return $this->container['minimum_password_non_apha_length'];
    }

    /**
     * Sets minimum_password_non_apha_length
     *
     * @param int|null $minimum_password_non_apha_length The minimum length that a password can be of non alpha characters
     *
     * @return self
     */
    public function setMinimumPasswordNonAphaLength($minimum_password_non_apha_length)
    {
        $this->container['minimum_password_non_apha_length'] = $minimum_password_non_apha_length;

        return $this;
    }

    /**
     * Gets max_invalid_password_attempts
     *
     * @return int|null
     */
    public function getMaxInvalidPasswordAttempts()
    {
        return $this->container['max_invalid_password_attempts'];
    }

    /**
     * Sets max_invalid_password_attempts
     *
     * @param int|null $max_invalid_password_attempts The maximum number of invalid password attempts
     *
     * @return self
     */
    public function setMaxInvalidPasswordAttempts($max_invalid_password_attempts)
    {
        $this->container['max_invalid_password_attempts'] = $max_invalid_password_attempts;

        return $this;
    }

    /**
     * Gets days_until_password_expiry
     *
     * @return int|null
     */
    public function getDaysUntilPasswordExpiry()
    {
        return $this->container['days_until_password_expiry'];
    }

    /**
     * Sets days_until_password_expiry
     *
     * @param int|null $days_until_password_expiry Days until password expires
     *
     * @return self
     */
    public function setDaysUntilPasswordExpiry($days_until_password_expiry)
    {
        $this->container['days_until_password_expiry'] = $days_until_password_expiry;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


