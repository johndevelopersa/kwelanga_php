<?php
/**
 * ConfigurationTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  SkynamoClientAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Skynamo Public API
 *
 * The specification for Skynamo's public API <br><br>Helpful links<br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671335262749-Creating-a-Public-API-Key\" id=\"hint_box\">Creating a Public API Key</a><br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671463933597-Postman-Examples\" id=\"hint_box\">Postman examples</a><br> <a href=\"https://support.skynamo.com/hc/en-us/articles/6671240071453-How-to-upload-customer-images-using-Postman\" id=\"hint_box\">How to upload customer images</a>
 *
 * The version of the OpenAPI document: 1.0.18
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace SkynamoClientAPI\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ConfigurationTest Class Doc Comment
 *
 * @category    Class
 * @description This is a configuration in Skynamo, used for fetching information about set configurations values
 * @package     SkynamoClientAPI
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ConfigurationTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Configuration"
     */
    public function testConfiguration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_name"
     */
    public function testPropertyCompanyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_logo"
     */
    public function testPropertyCompanyLogo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_logo_setting"
     */
    public function testPropertyCompanyLogoSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hide_links_in_emails"
     */
    public function testPropertyHideLinksInEmails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_request_recipients"
     */
    public function testPropertyCreditRequestRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_email_recipients"
     */
    public function testPropertyOrderEmailRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quote_recipients"
     */
    public function testPropertyQuoteRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_order_item_discount_in_emails"
     */
    public function testPropertyShowOrderItemDiscountInEmails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "show_product_thumbnail_in_emails"
     */
    public function testPropertyShowProductThumbnailInEmails()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "new_customer_email_recipients"
     */
    public function testPropertyNewCustomerEmailRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "form_completed_email_recipients"
     */
    public function testPropertyFormCompletedEmailRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "import_email_recipients"
     */
    public function testPropertyImportEmailRecipients()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "polling_schedule"
     */
    public function testPropertyPollingSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "export_customers_on_imports"
     */
    public function testPropertyExportCustomersOnImports()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "export_products_on_imports"
     */
    public function testPropertyExportProductsOnImports()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "export_credit_requests_on_imports"
     */
    public function testPropertyExportCreditRequestsOnImports()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "export_orders_on_imports"
     */
    public function testPropertyExportOrdersOnImports()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "export_quotes_on_imports"
     */
    public function testPropertyExportQuotesOnImports()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reporting_status"
     */
    public function testPropertyReportingStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_price_list_id"
     */
    public function testPropertyDefaultPriceListId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_price_list_name"
     */
    public function testPropertyDefaultPriceListName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_price_list_id"
     */
    public function testPropertyMinimumPriceListId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_price_list_name"
     */
    public function testPropertyMinimumPriceListName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warning_price_list_id"
     */
    public function testPropertyWarningPriceListId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warning_price_list_name"
     */
    public function testPropertyWarningPriceListName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deals_enabled"
     */
    public function testPropertyDealsEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overall_discount_enabled"
     */
    public function testPropertyOverallDiscountEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "warehouse_required"
     */
    public function testPropertyWarehouseRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "credit_request_signature_required"
     */
    public function testPropertyCreditRequestSignatureRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_signature_required"
     */
    public function testPropertyOrderSignatureRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quote_signature_required"
     */
    public function testPropertyQuoteSignatureRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_offsite_visits"
     */
    public function testPropertyAllowOffsiteVisits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "time_zone"
     */
    public function testPropertyTimeZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "distance_unit"
     */
    public function testPropertyDistanceUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_tax_rate_id"
     */
    public function testPropertyDefaultTaxRateId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_tax_rate_name"
     */
    public function testPropertyDefaultTaxRateName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mobile_excessive_data_usage_threshold"
     */
    public function testPropertyMobileExcessiveDataUsageThreshold()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maximum_mobile_photo_size"
     */
    public function testPropertyMaximumMobilePhotoSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "form_photo_wait_time"
     */
    public function testPropertyFormPhotoWaitTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "session_duration"
     */
    public function testPropertySessionDuration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_password_length"
     */
    public function testPropertyMinimumPasswordLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "minimum_password_non_apha_length"
     */
    public function testPropertyMinimumPasswordNonAphaLength()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_invalid_password_attempts"
     */
    public function testPropertyMaxInvalidPasswordAttempts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "days_until_password_expiry"
     */
    public function testPropertyDaysUntilPasswordExpiry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
